// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  email          String    @unique
  hashedPassword String
  createdAt      DateTime  @default(now())

  projects       Project[]
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  modules   Module[]
}

model Module {
  id        Int      @id @default(autoincrement())
  name      String
  projectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project  @relation(fields: [projectId], references: [id])
  tables    Table[]
}

model Table {
  id        Int      @id @default(autoincrement())
  name      String
  moduleId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  module    Module   @relation(fields: [moduleId], references: [id])
  testCases TestCase[]
}

model TestCase {
  id        Int      @id @default(autoincrement())
  title     String
  status    Boolean  @default(false)
  input     String?
  expected  String?
  output    String?
  tableId   Int

  table     Table    @relation(fields: [tableId], references: [id])
}
